openapi: 3.0.3
info:
  title: XM Bakeries API
  description: API for a multivendor bakery platform allowing customers to purchase products and bakery managers to manage products, inventory, and orders.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
          enum: [customer, bakery_manager]
        name:
          type: string
    TokenResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
        quantity:
          type: integer
        bakery:
          type: object
          properties:
            name:
              type: string
            address:
              type: string
    Order:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        total:
          type: number
          format: float
        status:
          type: string
          enum: [pending, processing, shipped, delivered]
        deliveryLocation:
          type: string
        OrderItems:
          type: array
          items:
            type: object
            properties:
              productId:
                type: integer
              quantity:
                type: integer
              price:
                type: number
                format: float
              Product:
                $ref: '#/components/schemas/Product'
    Inventory:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: integer
        quantity:
          type: integer
        lastUpdated:
          type: string
          format: date-time
        Product:
          $ref: '#/components/schemas/Product'
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Registers a customer or bakery manager. Bakery managers must provide bakery details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [customer, bakery_manager]
                name:
                  type: string
                bakeryName:
                  type: string
                bakeryAddress:
                  type: string
              required: [email, password, role, name]
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: User login
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products:
    post:
      summary: Add a new product
      description: Allows bakery managers to add a new product.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
                category:
                  type: string
                quantity:
                  type: integer
              required: [name, price, category, quantity]
      responses:
        '201':
          description: Product added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Product'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/search:
    get:
      summary: Search products
      description: Search products by name, category, price range, or quantity with sorting options.
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: number
        - name: maxPrice
          in: query
          schema:
            type: number
        - name: minQuantity
          in: query
          schema:
            type: integer
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [name, price, quantity]
        - name: order
          in: query
          schema:
            type: string
            enum: [ASC, DESC]
      responses:
        '200':
          description: Products retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
  /products/{id}:
    put:
      summary: Update a product
      description: Allows bakery managers to update a product.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
                category:
                  type: string
                quantity:
                  type: integer
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Product'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a product
      description: Allows bakery managers to delete a product.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: null
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    post:
      summary: Place an order
      description: Allows customers to place an order with multiple products.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      quantity:
                        type: integer
                    required: [productId, quantity]
                deliveryLocation:
                  type: string
              required: [items, deliveryLocation]
      responses:
        '201':
          description: Order placed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{id}:
    get:
      summary: Track an order
      description: Allows customers to track an order by ID.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/history:
    get:
      summary: Get order history
      description: Allows customers to view their order history.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Order history retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
  /orders/{id}/status:
    put:
      summary: Update order status
      description: Allows bakery managers to update an order's status.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, processing, shipped, delivered]
              required: [status]
      responses:
        '200':
          description: Order status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Order'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventory:
    get:
      summary: Get inventory
      description: Allows bakery managers to view inventory levels.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Inventory retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Inventory'
    post:
      summary: Update inventory
      description: Allows bakery managers to update inventory for a product.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                quantity:
                  type: integer
              required: [productId, quantity]
      responses:
        '200':
          description: Inventory updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: null
  /reports/sales:
    get:
      summary: Generate sales report
      description: Allows bakery managers to generate a sales report for a date range.
      security:
        - BearerAuth: []
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Sales report generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        orderId:
                          type: integer
                        total:
                          type: number
                          format: float
                        status:
                          type: string
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              productName:
                                type: string
                              quantity:
                                type: integer
                              price:
                                type: number
                                format: float
  /reports/inventory:
    get:
      summary: Generate inventory report
      description: Allows bakery managers to generate an inventory report.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Inventory report generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        productName:
                          type: string
                        quantity:
                          type: integer
                        lastUpdated:
                          type: string
                          format: date-time
  /users/me:
    get:
      summary: Get user profile
      description: Allows users to retrieve their profile information.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
    put:
      summary: Update user profile
      description: Allows users to update their profile information.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'